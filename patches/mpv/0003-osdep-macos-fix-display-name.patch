diff --git a/osdep/macos/swift_extensions.swift b/osdep/macos/swift_extensions.swift
index a1aeb0abf7..d3ce9b66d1 100644
--- a/osdep/macos/swift_extensions.swift
+++ b/osdep/macos/swift_extensions.swift
@@ -31,32 +31,7 @@ extension NSScreen {
 
     public var displayName: String? {
         get {
-            var name: String? = nil
-            var object: io_object_t
-            var iter = io_iterator_t()
-            let matching = IOServiceMatching("IODisplayConnect")
-            let result = IOServiceGetMatchingServices(kIOMasterPortDefault, matching, &iter)
-
-            if result != KERN_SUCCESS || iter == 0 { return nil }
-
-            repeat {
-                object = IOIteratorNext(iter)
-                if let info = IODisplayCreateInfoDictionary(object, IOOptionBits(kIODisplayOnlyPreferredName)).takeRetainedValue() as? [String:AnyObject],
-                    (info[kDisplayVendorID] as? UInt32 == CGDisplayVendorNumber(displayID) &&
-                    info[kDisplayProductID] as? UInt32 == CGDisplayModelNumber(displayID) &&
-                    info[kDisplaySerialNumber] as? UInt32 ?? 0 == CGDisplaySerialNumber(displayID))
-                {
-                    if let productNames = info["DisplayProductName"] as? [String:String],
-                       let productName = productNames.first?.value
-                    {
-                        name = productName
-                        break
-                    }
-                }
-            } while object != 0
-
-            IOObjectRelease(iter)
-            return name
+            return localizedName
         }
     }
 }
diff --git a/video/out/mac/common.swift b/video/out/mac/common.swift
index feb354261c..197d11bbc5 100644
--- a/video/out/mac/common.swift
+++ b/video/out/mac/common.swift
@@ -410,6 +410,9 @@ class Common: NSObject {
     }
 
     func getScreenBy(name screenName: String?) -> NSScreen? {
+        if (screenName == nil) {
+            return nil
+        }
         for screen in NSScreen.screens {
             if screen.displayName == screenName {
                 return screen
